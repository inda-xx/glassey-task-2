name: Dispatch

on:
  issues:
    types: [opened]

jobs:
  dispatch-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Parse issue title
        id: parse-issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.API_TOKEN }}
          script: |
            const issueNumber = context.payload.issue.number;
            const issueTitle = context.payload.issue.title.toLowerCase();
            let result = 'none';

            if (['pass', 'komp', 'fail'].includes(issueTitle)) {
              // Looks like a grading issue, ignore
              console.log('Ignoring grading issue...');
            } else if (['ama', 'hint', 'mend', 'rate', 'more'].includes(issueTitle)) {
              // Looks like a task for Open AI / GPT-4
              result = issueTitle;
            } else if(issueTitle === 'help') {
              // Provide the help options
              const issueBody = `Hej! Here's how I work. Open a new issue with a title that matches one of the following commands:
                \n\n - \`AMA\` (ask me anything): I will ask you a random question about your code
                \n - \`Hint X.Y\`: I will try to give you a hint about a particular exercise
                \n - \`Mend X.java\`: I will give you code quality tips for the given Java file
                \n - \`Rate\`: I will try to give a soft grade decision based on the task and code in the repo
                \n - \`More\`: I will invent a new exercise based on the current task
                \n\n I'll try my best to respond, but be patient as I am a bit slow ðŸ¤–`;
              
              // Update original help issue
              github.rest.issues.update({
                issue_number: issueNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: issueBody,
              });
            }
            return result;
      
      - name: Dispatch to handler
        id: dispatch-handler
        if: ${{ steps.parse-issue.outputs.result != 'none' }}
        run: |
          python -m pip install --upgrade pip
          pip install -r .github/workflows/requirements.txt

          if [[ "${{ steps.parse-issue.outputs.result }}" == 'ama' ]]; then
            python .github/workflows/handle_ama.py
          elif [[ "${{ steps.parse-issue.outputs.result }}" == 'hint' ]]; then
            python .github/workflows/handle_hint.py
          elif [[ "${{ steps.parse-issue.outputs.result }}" == 'mend' ]]; then
            python .github/workflows/handle_mend.py
          elif [[ "${{ steps.parse-issue.outputs.result }}" == 'more' ]]; then
            python .github/workflows/handle_more.py
          elif [[ "${{ steps.parse-issue.outputs.result }}" == 'rate' ]]; then
            python .github/workflows/handle_rate.py
          fi
      
      - name: Update issue
        id: update-issue
        if: ${{ steps.parse-issue.outputs.result != 'none' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.API_TOKEN }}
          script: |
              const issueNumber = context.payload.issue.number;

              // Update original issue
              github.rest.issues.update({
                issue_number: issueNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: ${{ steps.dispatch-handler.outputs.title }},
                body: ${{ steps.dispatch-handler.outputs.body }},
              });