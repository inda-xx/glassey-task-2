name: Dispatch

on:
  issues:
    types: [opened]

jobs:
  parse-issue-title:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.parse-title.outputs.result }}
    steps:
      - name: Parse issue title
        id: parse_title
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.API_TOKEN }}
          script: |
            const issueNumber = "${{ github.event.issue.number }}";
            const issueTitle = "${{ github.event.issue.title }}".toLowerCase();
            let result = 'none';

            if (['ama', 'hint', 'mend', 'rate', 'more'].includes(issueTitle)) {
              // Looks like a task for Open AI / GPT-4
              result = issueTitle;
            } else if(issueTitle === 'help') {
              // Provide the help options
              const issueBody = `Hej! Here's how I work. Open a new issue with a title that matches one of the following commands:
                \n\n - \`AMA\` (ask me anything): I will ask you a random question about your code
                \n - \`Hint X.Y\`: I will try to give you a hint about a particular exercise
                \n - \`Mend X.java\`: I will give you code quality tips for the given Java file
                \n - \`Rate\`: I will try to give a soft grade decision based on the task and code in the repo
                \n - \`More\`: I will invent a new exercise based on the current task
                \n\n I'll try my best to respond, but be patient as I am a bit slow ðŸ¤–`;
              
              // Update original help issue
              github.rest.issues.update({
                issue_number: issueNumber,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: issueBody,
              });
            }
            return result;
  
  dispatch-to-handler:
    needs: [parse-issue-title]
    runs-on: ubuntu-latest
    if: ${{ needs.parse-issue-title.outputs.result }} != 'none'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup environment and execute handler
        id: dispatch-handler
        env:
          JSON_PAYLOAD: ${{ toJSON(needs) }}
        run: |
          echo $JSON_PAYLOAD
          python -m pip install --upgrade pip
          pip install -r .github/workflows/requirements.txt

          if [[ "${{ needs.parse-issue-title.outputs.result }}" == 'ama' ]]; then
            python .github/workflows/handle_ama.py
          elif [[ "${{ needs.parse-issue-title.outputs.result }}" == 'hint' ]]; then
            python .github/workflows/handle_hint.py
          elif [[ "${{ needs.parse-issue-title.outputs.result }}" == 'mend' ]]; then
            python .github/workflows/handle_mend.py
          elif [[ "${{ needs.parse-issue-title.outputs.result }}" == 'more' ]]; then
            python .github/workflows/handle_more.py
          elif [[ "${{ needs.parse-issue-title.outputs.result }}" == 'rate' ]]; then
            python .github/workflows/handle_rate.py
          fi
      
      - name: Update issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.API_TOKEN }}
          script: |
              github.rest.issues.update({
                issue_number: "${{ github.event.issue.number }}",
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: "${{ steps.dispatch-handler.outputs.title }}",
                body: "${{ steps.dispatch-handler.outputs.body }}",
              });
